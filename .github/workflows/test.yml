name: Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  unit-tests:
    name: Unit & Integration Tests
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests
        run: npm test -- --watch=false --code-coverage --browsers=ChromeHeadlessCI

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: coverage-${{ matrix.node-version }}
          fail_ci_if_error: false

      - name: Archive coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report-${{ matrix.node-version }}
          path: coverage/

      - name: Check coverage thresholds
        run: |
          if [ -f coverage/coverage-summary.json ]; then
            STATEMENTS=$(cat coverage/coverage-summary.json | jq '.total.statements.pct')
            BRANCHES=$(cat coverage/coverage-summary.json | jq '.total.branches.pct')
            FUNCTIONS=$(cat coverage/coverage-summary.json | jq '.total.functions.pct')
            LINES=$(cat coverage/coverage-summary.json | jq '.total.lines.pct')

            echo "Coverage Summary:"
            echo "Statements: $STATEMENTS%"
            echo "Branches: $BRANCHES%"
            echo "Functions: $FUNCTIONS%"
            echo "Lines: $LINES%"

            if (( $(echo "$STATEMENTS < 70" | bc -l) )); then
              echo "‚ùå Statement coverage ($STATEMENTS%) is below 70%"
              exit 1
            fi

            if (( $(echo "$LINES < 70" | bc -l) )); then
              echo "‚ùå Line coverage ($LINES%) is below 70%"
              exit 1
            fi

            echo "‚úÖ Coverage thresholds met"
          fi

  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium firefox webkit

      - name: Run E2E tests
        run: npx playwright test --reporter=html

      - name: Upload Playwright report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-results
          path: test-results/
          retention-days: 30

  visual-regression:
    name: Visual Regression Tests
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium

      - name: Run visual regression tests
        run: npx playwright test visual-regression.spec.ts --project=chromium

      - name: Upload visual diff artifacts
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: visual-regression-diffs
          path: test-results/
          retention-days: 30

  build-library:
    name: Build Library
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build library
        run: npm run build

      - name: Archive build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

  coverage-report:
    name: Coverage Report
    runs-on: ubuntu-latest
    needs: unit-tests
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download coverage artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: coverage-report-*
          path: coverage-reports/

      - name: Comment PR with coverage
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');

            // Find the most recent coverage report
            const coverageDir = 'coverage-reports';
            const dirs = fs.readdirSync(coverageDir);

            if (dirs.length === 0) {
              console.log('No coverage reports found');
              return;
            }

            const latestDir = dirs[0];
            const summaryPath = path.join(coverageDir, latestDir, 'coverage-summary.json');

            if (!fs.existsSync(summaryPath)) {
              console.log('Coverage summary not found');
              return;
            }

            const summary = JSON.parse(fs.readFileSync(summaryPath, 'utf8'));
            const total = summary.total;

            const comment = `## üìä Test Coverage Report

            | Metric | Coverage | Status |
            |--------|----------|--------|
            | Statements | ${total.statements.pct}% | ${total.statements.pct >= 70 ? '‚úÖ' : '‚ùå'} |
            | Branches | ${total.branches.pct}% | ${total.branches.pct >= 60 ? '‚úÖ' : '‚ùå'} |
            | Functions | ${total.functions.pct}% | ${total.functions.pct >= 70 ? '‚úÖ' : '‚ùå'} |
            | Lines | ${total.lines.pct}% | ${total.lines.pct >= 70 ? '‚úÖ' : '‚ùå'} |

            **Thresholds:** 70% for statements, functions, and lines | 60% for branches

            ${total.lines.pct >= 70 ? '‚úÖ Coverage meets minimum requirements!' : '‚ùå Coverage below minimum requirements'}
            `;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

  lint-and-format:
    name: Lint & Format Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run TypeScript compiler check
        run: npx tsc --noEmit

      - name: Check for console.log statements
        run: |
          if grep -r "console\.log" src --include="*.ts" --exclude="*.spec.ts"; then
            echo "‚ùå Found console.log statements in source code"
            exit 1
          else
            echo "‚úÖ No console.log statements found"
          fi
